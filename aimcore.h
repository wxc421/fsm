/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "center.go"
 typedef void (*cb)(char* extra, char* data);
 extern void callCb(cb callback, char* extra, char* arg);

#line 1 "cgo-generated-wrapper"

#line 3 "usr.go"
 typedef void (*cb)(char* extra, char* data);
 extern void callCb(cb callback, char* extra, char* arg);

#line 1 "cgo-generated-wrapper"

#line 4 "conv.go"
 typedef void (*cb)(char* extra, char* data);
 extern void callCb(cb callback, char* extra, char* arg);

#line 1 "cgo-generated-wrapper"

#line 3 "msg.go"
 typedef void (*cb)(char* extra, char* data);
 extern void callCb(cb callback, char* extra, char* arg);

#line 1 "cgo-generated-wrapper"

#line 3 "grp.go"
 typedef void (*cb)(char* extra, char* data);
 extern void callCb(cb callback, char* extra, char* arg);

#line 1 "cgo-generated-wrapper"

#line 3 "frd.go"
 typedef void (*cb)(char* extra, char* data);
 extern void callCb(cb callback, char* extra, char* arg);

#line 1 "cgo-generated-wrapper"

#line 3 "org.go"
 typedef void (*cb)(char* extra, char* data);
 extern void callCb(cb callback, char* extra, char* arg);

#line 1 "cgo-generated-wrapper"

#line 3 "file.go"
 typedef void (*cb)(char* extra, char* data);
 extern void callCb(cb callback, char* extra, char* arg);

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern __declspec(dllexport) char* InitSDK(char* config);
extern __declspec(dllexport) char* UnInitSDK();
extern __declspec(dllexport) char* Logout(char* _, cb callback, char* extra);
extern __declspec(dllexport) char* GetLastAppVersion(char* _, cb callback, char* extra);
extern __declspec(dllexport) char* AddListener(char* _, cb callback, char* extra);
extern __declspec(dllexport) char* DisConnect();
extern __declspec(dllexport) char* Connect();
extern __declspec(dllexport) char* Log(char* param);
extern __declspec(dllexport) char* IsLogin();
extern __declspec(dllexport) char* IsE2eeEnabled();
extern __declspec(dllexport) char* SetupE2EE(char* password, cb callback, char* extra);
extern __declspec(dllexport) char* GetUserInfo();
extern __declspec(dllexport) char* SendSmsCode(char* params, cb callback, char* extra);
extern __declspec(dllexport) char* VerifySmsCode(char* params, cb callback, char* extra);
extern __declspec(dllexport) char* LoginByPassword(char* params, cb callback, char* extra);
extern __declspec(dllexport) char* LoginByPhone(char* params, cb callback, char* extra);
extern __declspec(dllexport) char* Register(char* params, cb callback, char* extra);
extern __declspec(dllexport) char* UpdateUserInfo(char* params, cb callback, char* extra);
extern __declspec(dllexport) char* GetNoticeSwitchOpen(char* params, cb callback, char* extra);
extern __declspec(dllexport) char* SetNoticeSwitchOpen(char* params, cb callback, char* extra);
extern __declspec(dllexport) char* AddPassword(char* params, cb callback, char* extra);
extern __declspec(dllexport) char* GetLimitToken(char* params, cb callback, char* extra);
extern __declspec(dllexport) char* AddConvListener(char* _, cb callback, char* extra);
extern __declspec(dllexport) char* GetConversation(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetConversationList(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* DeleteConversation(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetConversationDraft(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetConversationRecvOpt(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetConversationRecvOpt(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* PinConversation(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* MarkConversationAsRead(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* MarkConversationAsUnread(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetConversationActive(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetTotalUnreadMessageCount(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* MarkSecretaryFrdApplyListAsRead(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* MarkSecretaryGrpApplyListAsRead(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SendMsg(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* CreateTextMessage(char* param);
extern __declspec(dllexport) char* CreateSoundMessage(char* param);
extern __declspec(dllexport) char* CreateFileMessage(char* param);
extern __declspec(dllexport) char* CreateImageMessage(char* param);
extern __declspec(dllexport) char* CreateVideoMessage(char* param);
extern __declspec(dllexport) char* CreateReferenceMessage(char* param);
extern __declspec(dllexport) char* CreateForwardMessage(char* param);
extern __declspec(dllexport) char* SetGroupMemberInfo(char* param);
extern __declspec(dllexport) char* SetupGroupMemberInfo(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* SearchLocal(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* SearchLocalFriend(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* SearchLocalMessage(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetHistoryMessageList(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetLocalMessage(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupMsgReadList(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* DownloadMsgElem(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* CopyMsgFile(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* AddMsgListener(char* _, cb callback, char* extra);
extern __declspec(dllexport) char* RevokeMessage(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* ForceReovkeMsgs(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* DeleteLocalMessages(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* CleanLocalMessageOfConv(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* SendMessageReadReceipts(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* CollectMessage(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* CreateGroup(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupInfo(char* groupId, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupMemberList(char* groupId, cb callback, char* extra);
extern __declspec(dllexport) char* ApplyJoinGroup(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* VerifyApplyGroup(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* InviteJoinGroup(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* VerifyInviteGroup(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupApplyResult(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* ActiveGroup(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GenerateQrCode(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* VerifyQrCode(char* id, cb callback, char* extra);
extern __declspec(dllexport) char* GetMyGroupMemberInfo(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetMyGroupRole(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupMemberRole(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupOverviewInfo(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* UpdateGroupInfo(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* UpdateGroupDesc(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupPreview(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* TransferOwner(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetGroupAdmin(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* RemoveGroupAdmin(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupMemberInfo(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SearchGroupMember(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SearchGroupManageMember(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SearchGroupMemberAndFriend(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SearchGroupOrOrg(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* QuitGroup(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* UpdateMyGroupMemberInfo(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetMyUseControlInfo(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetControlInfo(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetControlInfo(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetJoinApprovalControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetShareInviteControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetRenameNumControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetJoinNoticeControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetExistNoticeControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetNameDuplicateControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetCheckGroupMemberControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetAddFriendTypeControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetMuteControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetFileValidPeriodControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetMsgGapControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetNeedReadFlagControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetShareFileControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetForwardFileControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetScreenshotPunishControl(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* DeleteAnnounce(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* UpdateAnnounce(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* AddAnnounce(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetAnnounceList(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetLatestUnreadAnnounce(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetLatestAnnounce(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* EjectConfirm(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* EjectGroupMember(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupMemberWithApplyStatus(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* MarkAllAnnounceAsRead(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* HasGroupOuterFriend(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupFriendList(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* FilterGroupMemberList(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupMemberMoreInfos(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetTransferGroupManageMemberList(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* PullGroup(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* PullUserToGroup(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* ApplyFriends(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* VerifyFriends(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetFriendList(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetFriendApplyResult(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetFriendInfo(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetFriendStructureList(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* UpdateRemark(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* RemoveRelation(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* CreateOrganization(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* UpdateOrganization(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* SetOrgAsMain(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* FetchOrganizationList(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetGroupManageList(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetOrgInfo(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetOrgInfoWithExtInfo(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetPublicGroupList(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* DeleteOrganization(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* QuitOrganization(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetOrgIdentityList(char* _, cb callback, char* extra);
extern __declspec(dllexport) char* AddOrgIdentity(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* UpdateOrgIdentity(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* DeleteOrgIdentity(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetOrgIdentityApplyOrgList(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetOrgIdentityByOrgId(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* ApplyOrgIdentity(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* QueryOrgIdentityList(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetResourceList(char* _, cb callback, char* extra);
extern __declspec(dllexport) char* GetOrgIsExpired(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetOrgStatistics(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* AddOrgResource(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* GetOrgControlInfo(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* SetCreateGroup(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* SetOrgUserRole(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* SearchOrgUsers(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* UploadAvatar(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* GetAvatar(char* config, cb callback, char* extra);
extern __declspec(dllexport) char* DownloadInstallFile(char* param, cb callback, char* extra);
extern __declspec(dllexport) char* UploadLatestLog(char* param, cb callback, char* extra);

#ifdef __cplusplus
}
#endif
